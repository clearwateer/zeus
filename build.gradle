plugins {
    id 'java'
}

group 'com.ciitizen'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile project('automation-rest')
    compile project('automation-ui')
    testCompile group: 'junit', name: 'junit', version: '4.12'
   
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
     compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.1'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
    compile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.2'
    compile group: 'io.rest-assured', name: 'json-path', version: '3.0.0'
    compile group: 'org.testng', name: 'testng', version: '6.8.21'
    compile group: 'com.github.docker-java', name: 'docker-java', version: '3.1.0-rc-5'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.52'
    compile group: 'org.snmp4j', name: 'snmp4j', version: '2.5.8'
    compile group: 'org.jsoup', name: 'jsoup', version:'1.10.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'info.cukes', name: 'cucumber-core', version: '1.2.5'
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'
    compile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'
    compile group: 'info.cukes', name: 'cucumber-testng', version: '1.2.5'
    compile group: 'info.cukes', name: 'cucumber-jvm-deps', version: '1.0.5'
    compile group: 'info.cukes', name: 'gherkin', version: '2.12.2'
    compile group: 'info.cukes', name: 'cucumber-html', version: '0.2.3'
    compile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.2.5'
    compile ('io.appium:java-client:5.0.4'){
        force = true
    }
    
    
}
task deployContent (type: Copy) {

   

   

    from('./') {
        include 'feature_files/**'
    }
    from('./build') {
        include 'resources/**'
    }

    from('build/libs')

  
}
task copyRuntimeLibs(type: Copy) {
    into "$buildDir/output/libs"
    from configurations.runtime
}

task copyPrimeJar(type: Copy) {
    from jar // here it automatically reads jar file produced from jar task
    into "$buildDir/output/libs"
}



task run (type: Exec) {

    executable "java"
    args "-cp", "build/output/libs/*", "MainDriver"

    if (project.hasProperty('details')) {
        args(details.split(','))
    }
}

javadoc {
    classpath += sourceSets.main.compileClasspath
    source += sourceSets.main.allJava
    include "**/*Step.java"
}

build.dependsOn ':tools:checkTCName'

tasks.deployContent.mustRunAfter build
build.finalizedBy(tasks.deployContent)
build.dependsOn(copyRuntimeLibs)
build.dependsOn(copyPrimeJar)

